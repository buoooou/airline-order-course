
name: CI/CD for Angular and Spring Boot

on:
  push:
    branches:
      - main  # 触发部署的分支

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: airlineorder
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境（用于 Angular 构建）
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # 3. 安装 Angular 依赖并构建       
      - name: Build airline-order-frontend
        run: |
          cd airline-order-frontend
      
          # ✅ 2. 安装依赖
          npm ci
      
          # ✅ 3. 构建
          npx ng build --configuration=production

      # 4. 设置 Java 环境（用于 Spring Boot 构建）
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 5. 构建 Spring Boot 项目
      - name: Build airline-order-backend
        run: |
          cd airline-order-backend
          chmod +x ./mvnw
          ./mvnw clean install

      # 6. 在 EC2 上安装 Node.js 和 npm
      - name: Install Node.js and npm on EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts
      
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }} "
            sudo apt-get update && sudo apt-get install -y nodejs npm
          "

      # 7. 设置 PATH（可选，通常不需要）
      - name: Set PATH for Node.js and npm
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }} "
            echo 'export PATH=$PATH:/usr/bin' >> ~/.bashrc && source ~/.bashrc
          "

      # 8. 部署到 EC2：使用 rsync 同步构建产物
      - name: Deploy to EC2 via rsync
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts
      
          # 创建远程目录
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }} "
            mkdir -p /home/ubuntu/app/frontend /home/ubuntu/app/backend
          "
      
          # ✅ 修复：同步 dist/airline-order-frontend/ 的内容
          rsync -avz --delete ./airline-order-frontend/dist/airline-order-frontend/ ${{ secrets.AWS_EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/app/frontend/
      
          # 同步后端 JAR
          rsync -avz --delete ./airline-order-backend/target/*.jar ${{ secrets.AWS_EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/app/backend/

      # 9. 在 EC2 上执行部署脚本
      - name: Run Deployment Script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 确保 http-server 已安装
            if ! command -v http-server &> /dev/null; then
              sudo npm install -g http-server
            fi

            # 停止旧前端服务
            pkill -f "http-server" || true

            # ✅ 启动前端服务，带日志
            nohup http-server /home/ubuntu/app/frontend/browser -p 8080 > /home/ubuntu/app/frontend.log 2>&1 &

            # 停止旧后端服务
            pkill -f "java -jar" || true

            # ✅ 启动后端服务，带日志
            nohup java -jar /home/ubuntu/app/backend/*.jar > /home/ubuntu/app/backend.log 2>&1 &

