# 生产环境配置文件
# 用于AWS EC2部署的生产环境配置

server.port=8080
server.servlet.context-path=/

# 数据库配置 - 使用环境变量
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://airline-mysql:3306/airline_order_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=utf8&useUnicode=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:airline_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:airline_password_123}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}

# 连接池配置 - 生产环境优化
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate配置 - 生产环境
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Redis配置（如果使用）
spring.redis.host=${SPRING_REDIS_HOST:localhost}
spring.redis.port=${SPRING_REDIS_PORT:6379}
spring.redis.password=${SPRING_REDIS_PASSWORD:}
spring.redis.timeout=2000ms
spring.redis.jedis.pool.max-active=20
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.min-idle=5

# SpringDoc (Swagger) 配置 - 生产环境（启用以便测试）
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# JWT配置
jwt.secret=${JWT_SECRET:63ffbc2b8d13ad5180ed7ae7c67f18c85d86046732fc9ced6a02a9d50abb1a03}
jwt.expiration.ms=${JWT_EXPIRATION_MS:86400000}

# 日志配置 - 生产环境
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.com.postion=${LOGGING_LEVEL_COM_POSTION:INFO}
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# 日志文件配置
logging.file.name=/app/logs/airline-order.log
logging.file.max-size=100MB
logging.file.max-history=30
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator配置 - 生产环境监控
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.redis.enabled=true
management.metrics.export.prometheus.enabled=true

# 应用信息
info.app.name=Airline Order Management System
info.app.description=航空订单管理系统
info.app.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# 安全配置
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# 跨域配置
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200,https://yourdomain.com}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# 文件上传配置
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# 缓存配置
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# 定时任务配置
app.order.payment-timeout-minutes=${ORDER_PAYMENT_TIMEOUT:30}
app.order.ticketing-timeout-minutes=${ORDER_TICKETING_TIMEOUT:60}
app.order.ticketing-failed-timeout-hours=${ORDER_FAILED_TIMEOUT:24}
app.scheduled.enabled=${SCHEDULED_ENABLED:true}

# ShedLock配置
app.shedlock.default-lock-at-most-for=${SHEDLOCK_LOCK_TIME:10m}
app.shedlock.table-name=shedlock

# 性能配置
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=20000
server.tomcat.max-connections=8192
server.tomcat.accept-count=100

# 压缩配置
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# SSL配置（如果使用HTTPS）
server.ssl.enabled=${SSL_ENABLED:false}
server.ssl.key-store=${SSL_KEYSTORE:}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD:}
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=airline-order

# 外部API配置
app.external.flight-api.url=${FLIGHT_API_URL:http://localhost:8081}
app.external.flight-api.timeout=5000
app.external.payment.url=${PAYMENT_API_URL:}
app.external.notification.url=${NOTIFICATION_API_URL:}
