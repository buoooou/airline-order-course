name: CI/CD for Angular and Spring Boot

on:
  push:
    branches:
      - main  # 触发部署的分支

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: airlineorder
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境（用于 Angular 构建）
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # 根据你的 Angular 项目需求调整版本

      # 3. 安装 Angular 依赖并构建
      - name: Build airline-order-frontend
        run: |
          cd ${{ github.workspace }}/airline-order-frontend
          npm ci  # 使用 npm ci 保证依赖一致性
          npx ng build --configuration=production

      # 4. 设置 Java 环境（用于 Spring Boot 构建）
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # 根据 Spring Boot 项目需求调整版本
          distribution: 'temurin'  # 推荐使用 Temurin 发行版

      # 5. 安装 Maven 并构建 Spring Boot 项目
      - name: Build airline-order-backend
        run: |
          cd /home/runner/work/jinjin-airline-order-course/jinjin-airline-order-course/airline-order-backend
          chmod +x ./mvnw  # 添加可执行权限
          ./mvnw clean install

      # 6. 部署到 EC2 实例
      - name: Deploy Frontend to EC2
        uses: easingthemes/ssh-deploy@v2.0.7
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_PUBLIC_IP }}
          REMOTE_USER: ${{ secrets.AWS_EC2_USER }}
          SOURCE: ${{ github.workspace }}/airline-order-frontend/dist
          TARGET: /home/ubuntu/app/frontend/
          ARGS: "-avz --delete"
      
      - name: Deploy Backend JAR to EC2
        uses: easingthemes/ssh-deploy@v2.0.7
        with:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_PUBLIC_IP }}
          REMOTE_USER: ${{ secrets.AWS_EC2_USER }}
          SOURCE: ${{ github.workspace }}/airline-order-backend/target/*.jar
          TARGET: /home/ubuntu/app/backend/
          ARGS: "-avz --delete"
    
      # 7. 在 EC2 上执行部署脚本
      - name: Run Deployment Script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.AWS_EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 替换前端文件（假设 Nginx 挂载到 /var/www/html）
            cp -r /home/ubuntu/app/dist/* /var/www/html/
            
            # 替换后端 JAR 文件
            cp /home/ubuntu/app/*.jar /home/ubuntu/app/backend/app.jar
            
            # 重启后端服务（确保服务生效）
            sudo systemctl restart airline-order-backend
